name: Manual Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Do dry-run? (true/false)"
        required: true
        default: "true"

jobs:
  release:
    name: üöÄ Release package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Update to latest openapi.json
        run: npm run update

      - name: Run tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Get version from package.json
        id: get_version
        run: echo "::set-output name=VER::$(node -p "require('./package.json').version")"

      - name: Commit release bump
        run: |
          V=${{ steps.get_version.outputs.VER }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "prepare release $V"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "‚è≠ nothing to commit, continuing‚Ä¶"
          fi

      - name: Create & push tag
        if: ${{ github.event.inputs.dry_run == 'false' }}
        run: |
          V=${{ steps.get_version.outputs.VER }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$V" -m "Release v$V"
          git push origin "v$V"

      - name: Publish to npm (or dry run)
        run: |
          if [ "${{ github.event.inputs.dry_run }}" = "false" ]; then
            echo "=== REAL PUBLISH ==="
            npm publish --access public
          else
            echo "=== DRY RUN ==="
            npm publish --dry-run --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
